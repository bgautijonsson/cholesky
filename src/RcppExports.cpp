// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// make_matern_prec_matrix_2d_cpp
NumericMatrix make_matern_prec_matrix_2d_cpp(double a, int dim);
RcppExport SEXP _cholesky_make_matern_prec_matrix_2d_cpp(SEXP aSEXP, SEXP dimSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< int >::type dim(dimSEXP);
    rcpp_result_gen = Rcpp::wrap(make_matern_prec_matrix_2d_cpp(a, dim));
    return rcpp_result_gen;
END_RCPP
}
// cholesky_bandsparse_cpp
NumericMatrix cholesky_bandsparse_cpp(NumericMatrix A);
RcppExport SEXP _cholesky_cholesky_bandsparse_cpp(SEXP ASEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type A(ASEXP);
    rcpp_result_gen = Rcpp::wrap(cholesky_bandsparse_cpp(A));
    return rcpp_result_gen;
END_RCPP
}
// compute_marginal_variances_cpp
NumericVector compute_marginal_variances_cpp(NumericMatrix L);
RcppExport SEXP _cholesky_compute_marginal_variances_cpp(SEXP LSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type L(LSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_marginal_variances_cpp(L));
    return rcpp_result_gen;
END_RCPP
}
// make_standardized_matern_cpp
NumericMatrix make_standardized_matern_cpp(double a, int dim);
RcppExport SEXP _cholesky_make_standardized_matern_cpp(SEXP aSEXP, SEXP dimSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< int >::type dim(dimSEXP);
    rcpp_result_gen = Rcpp::wrap(make_standardized_matern_cpp(a, dim));
    return rcpp_result_gen;
END_RCPP
}
// make_matern_prec_matrix_2d_cpp_eigen
Eigen::SparseMatrix<double> make_matern_prec_matrix_2d_cpp_eigen(double a, int dim);
RcppExport SEXP _cholesky_make_matern_prec_matrix_2d_cpp_eigen(SEXP aSEXP, SEXP dimSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< int >::type dim(dimSEXP);
    rcpp_result_gen = Rcpp::wrap(make_matern_prec_matrix_2d_cpp_eigen(a, dim));
    return rcpp_result_gen;
END_RCPP
}
// cholesky_bandsparse_cpp_eigen
Eigen::SparseMatrix<double> cholesky_bandsparse_cpp_eigen(Eigen::SparseMatrix<double> A);
RcppExport SEXP _cholesky_cholesky_bandsparse_cpp_eigen(SEXP ASEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::SparseMatrix<double> >::type A(ASEXP);
    rcpp_result_gen = Rcpp::wrap(cholesky_bandsparse_cpp_eigen(A));
    return rcpp_result_gen;
END_RCPP
}
// compute_marginal_variances_cpp_eigen
Eigen::VectorXd compute_marginal_variances_cpp_eigen(const Eigen::SparseMatrix<double>& L);
RcppExport SEXP _cholesky_compute_marginal_variances_cpp_eigen(SEXP LSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::SparseMatrix<double>& >::type L(LSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_marginal_variances_cpp_eigen(L));
    return rcpp_result_gen;
END_RCPP
}
// make_standardized_matern_cpp_eigen
Eigen::MatrixXd make_standardized_matern_cpp_eigen(double a, int dim);
RcppExport SEXP _cholesky_make_standardized_matern_cpp_eigen(SEXP aSEXP, SEXP dimSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< int >::type dim(dimSEXP);
    rcpp_result_gen = Rcpp::wrap(make_standardized_matern_cpp_eigen(a, dim));
    return rcpp_result_gen;
END_RCPP
}
// make_AR_prec_matrix_sparse
Eigen::SparseMatrix<double> make_AR_prec_matrix_sparse(int dim, double rho);
RcppExport SEXP _cholesky_make_AR_prec_matrix_sparse(SEXP dimSEXP, SEXP rhoSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type dim(dimSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    rcpp_result_gen = Rcpp::wrap(make_AR_prec_matrix_sparse(dim, rho));
    return rcpp_result_gen;
END_RCPP
}
// make_matern_prec_matrix_sparse
Eigen::SparseMatrix<double> make_matern_prec_matrix_sparse(int dim, double rho);
RcppExport SEXP _cholesky_make_matern_prec_matrix_sparse(SEXP dimSEXP, SEXP rhoSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type dim(dimSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    rcpp_result_gen = Rcpp::wrap(make_matern_prec_matrix_sparse(dim, rho));
    return rcpp_result_gen;
END_RCPP
}
// compute_marginal_variances_sparse
Eigen::SparseMatrix<double> compute_marginal_variances_sparse(const Eigen::SparseMatrix<double>& Q);
RcppExport SEXP _cholesky_compute_marginal_variances_sparse(SEXP QSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::SparseMatrix<double>& >::type Q(QSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_marginal_variances_sparse(Q));
    return rcpp_result_gen;
END_RCPP
}
// make_standardized_matern_sparse
Eigen::SparseMatrix<double> make_standardized_matern_sparse(int dim, double rho);
RcppExport SEXP _cholesky_make_standardized_matern_sparse(SEXP dimSEXP, SEXP rhoSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type dim(dimSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    rcpp_result_gen = Rcpp::wrap(make_standardized_matern_sparse(dim, rho));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_cholesky_make_matern_prec_matrix_2d_cpp", (DL_FUNC) &_cholesky_make_matern_prec_matrix_2d_cpp, 2},
    {"_cholesky_cholesky_bandsparse_cpp", (DL_FUNC) &_cholesky_cholesky_bandsparse_cpp, 1},
    {"_cholesky_compute_marginal_variances_cpp", (DL_FUNC) &_cholesky_compute_marginal_variances_cpp, 1},
    {"_cholesky_make_standardized_matern_cpp", (DL_FUNC) &_cholesky_make_standardized_matern_cpp, 2},
    {"_cholesky_make_matern_prec_matrix_2d_cpp_eigen", (DL_FUNC) &_cholesky_make_matern_prec_matrix_2d_cpp_eigen, 2},
    {"_cholesky_cholesky_bandsparse_cpp_eigen", (DL_FUNC) &_cholesky_cholesky_bandsparse_cpp_eigen, 1},
    {"_cholesky_compute_marginal_variances_cpp_eigen", (DL_FUNC) &_cholesky_compute_marginal_variances_cpp_eigen, 1},
    {"_cholesky_make_standardized_matern_cpp_eigen", (DL_FUNC) &_cholesky_make_standardized_matern_cpp_eigen, 2},
    {"_cholesky_make_AR_prec_matrix_sparse", (DL_FUNC) &_cholesky_make_AR_prec_matrix_sparse, 2},
    {"_cholesky_make_matern_prec_matrix_sparse", (DL_FUNC) &_cholesky_make_matern_prec_matrix_sparse, 2},
    {"_cholesky_compute_marginal_variances_sparse", (DL_FUNC) &_cholesky_compute_marginal_variances_sparse, 1},
    {"_cholesky_make_standardized_matern_sparse", (DL_FUNC) &_cholesky_make_standardized_matern_sparse, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_cholesky(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
